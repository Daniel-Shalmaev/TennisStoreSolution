@page "/brand/{id:int}"
@using System.Text.RegularExpressions

<div class="container">
    <img class="brand-logo" src="@("/images/" + CurrentBrand?.LogoPath)" alt="@CurrentBrand?.HebName">
    <img class="banner-img" src="https://i.imgur.com/@CurrentBrand?.BrandPageBannerImage" alt="">
    @if (CurrentBrand?.Subcategories != null)
    {
        <div class="subcategory-wrapper">
            @foreach (var subcategory in CurrentBrand.Subcategories)
            {
                if (!string.IsNullOrEmpty(subcategory.BrandIconPath))
                {
                    <div class="subcategory-icon">
                        <div class="subcategory-content">
                            <img class="subcategory-img" src="/Images/Icons/@subcategory.BrandIconPath" alt="@subcategory.Name">
                            <span class="subcategory-name">@subcategory.CategoryName</span>
                        </div>
                    </div>
                }
            }
        </div>
    }
    @* <h1 class="brand-title">Hi</h1>
    <span>@CurrentBrand?.HebName</span> *@
</div>

@code {
    #region Parameters

    [Parameter]
    public int Id { get; set; }

    #endregion

    #region Properties

    private Brand? CurrentBrand { get; set; }

    #endregion

    #region Lifecycle Methods

    protected override async Task OnInitializedAsync()
    {
        CurrentBrand = await BrandService.GetBrandById(Id);
    }

    #endregion
}
