@page "/brand/{id:int}"
@using System.Text.RegularExpressions

<div class="container">
    <img class="brand-logo" src="@("/images/" + CurrentBrand?.LogoPath)" alt="@CurrentBrand?.HebName">
    <img class="banner-img" src="https://i.imgur.com/@CurrentBrand?.BrandPageBannerImage" alt="">
    @if (CurrentBrand?.Subcategories != null)
    {
        foreach (var subcategory in CurrentBrand.Subcategories)
        {
            if (!string.IsNullOrEmpty(subcategory.BrandIconPath))
            {
                <div class="subcategory-icon">
                    <img src="/Images/Icons/@subcategory.BrandIconPath" style="
                            width: 150px;
                            background-color: #f9f9f9;
                            padding-bottom: 10px;
                            border: 1px solid #f5f5f5;
                            margin-bottom: 10px;
                            border-radius: 5px;" alt="@subcategory.Name">
                    <span>@subcategory.Name</span>
                </div>
            }
        }
    }
    @* <h1 class="brand-title">Hi</h1>
    <span>@CurrentBrand?.HebName</span> *@
</div>

@code {
    #region Parameters

    [Parameter]
    public int Id { get; set; }

    #endregion

    #region Properties

    private Brand? CurrentBrand { get; set; }

    #endregion

    #region Lifecycle Methods

    protected override async Task OnInitializedAsync()
    {
        CurrentBrand = await BrandService.GetBrandById(Id);
    }

    #endregion
}
