<div class="product-main">
    <h2 class="title">@Title</h2>

    <div class="product-grid">
        @foreach (var product in ProductsToShow)
        {
            <div class="showcase">
                <div class="showcase-banner">
                    <img src="@product.Image1" alt="@product.Name" width="300" height="300" class="product-img default">
                    <img src="@product.Image1" alt="@product.Name" width="300" height="300" class="product-img hover">

                    @if (!string.IsNullOrEmpty(product.Badge))
                    {
                        <p class="showcase-badge">@product.Badge</p>
                    }

                    <div class="showcase-actions">
                        <button class="btn-action"><i class="fa-regular fa-heart"></i></button>
                        <button class="btn-action"><i class="fa-regular fa-eye"></i></button>
                        <button class="btn-action"><i class="fa-solid fa-repeat"></i></button>
                        <button class="btn-action"><i class="fa-solid fa-bag-shopping"></i></button>
                    </div>
                </div>

                <div class="showcase-content">
                    <a href="#" class="showcase-category">@product.Category?.Name</a>

                    <h3><a href="#" class="showcase-title">@product.Name</a></h3>

                    <div class="showcase-rating">
                        @for (int i = 0; i < 5; i++)
                        {
                            if (i < product.Rating)
                            {
                                <i class="fa-solid fa-star"></i>
                            }
                            else
                            {
                                <i class="fa-regular fa-star"></i>
                            }
                        }
                    </div>

                    <div class="price-box">
                        <p class="price">₪@product.Price</p>
                        <del>₪@product.OldPrice</del>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public List<Product> Products { get; set; } = new();

    [Parameter]
    public string Title { get; set; } = "מוצרים חדשים";

    private List<Product> ProductsToShow = new();

    protected override async Task OnInitializedAsync()
    {
        if (Products?.Any() == true)
        {
            ProductsToShow = Products;
        }
        else
        {
            await ProductService.GetAllProducts(false);
            ProductsToShow = ProductService.AllProducts
                .OrderByDescending(product => product.DateUploaded)
                .Take(12)
                .ToList();
        }
    }
}
